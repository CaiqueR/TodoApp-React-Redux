{"version":3,"sources":["App.js","components/menu/menu.js","components/PageHeader/PageHeader.js","components/Grid/Grid.js","components/If/If.jsx","components/IconButton/IconButton.js","services/api.js","components/todo/actions/todoActions.js","components/todo/TodoForm.js","components/todo/TodoList.js","components/todo/todo.js","components/about/about.js","main/routes.js","main/reducers/todo.redux.js","main/reducers/index.redux.js","serviceWorker.js","index.js"],"names":["hot","module","className","Menu","props","href","id","PageHeader","name","small","Grid","numbers","cols","this","split","classes","children","gridClasses","toCssClasses","Component","If","test","IconButton","style","icon","hidden","onClick","type","defaultProps","api","axios","create","baseURL","changeDescription","event","payload","target","value","search","description","req","get","clear","addTodo","dispatch","post","then","markAsDone","todo","getState","put","_id","done","result","data","markAsPending","removeTodo","delete","TodoForm","keyHandler","e","key","shiftKey","trocarDescricao","role","onKeyUp","placeholder","onChange","connect","state","bindActionCreators","proplist","list","formDescription","map","About","Routes","path","component","Todo","from","to","INITIAL_STATE","rootReducer","combineReducers","action","Boolean","window","location","hostname","match","store","createStore","reducers","applyMiddleware","thunk","multi","promise","logger","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sGAAA,gEAgBeA,kBAAIC,EAAJD,EATf,WACE,OACE,yBAAKE,UAAU,aACb,kBAAC,IAAD,MACA,kBAAC,IAAD,Y,qDCXN,oBA8BeC,IA1BF,SAACC,GAAD,OACX,yBAAKF,UAAU,0DACb,yBAAKA,UAAU,aACb,uBAAGA,UAAU,eAAeG,KAAK,UAC/B,uBAAGH,UAAU,gCADf,WAKA,yBAAKA,UAAU,2BAA2BI,GAAG,0BAC3C,wBAAIJ,UAAU,sBACZ,wBAAIA,UAAU,YACZ,uBAAGA,UAAU,WAAWG,KAAK,UAA7B,YAIF,wBAAIH,UAAU,YACZ,uBAAGA,UAAU,WAAWG,KAAK,UAA7B,gB,mECNGE,G,MAVI,SAACH,GAAD,OACjB,4BAAQF,UAAU,gCAChB,4BACGE,EAAMI,KACZ,IACD,2BAAON,UAAU,SAASE,EAAMK,W,+CCJXC,E,2KACNC,GACX,IAAMC,EAAOC,KAAKF,QAAUA,EAAQG,MAAM,KAAO,GAC7CC,EAAU,GAOd,OALIH,EAAK,KAAIG,GAAO,iBAAcH,EAAK,GAAnB,MAChBA,EAAK,KAAIG,GAAO,iBAAcH,EAAK,GAAnB,MAChBA,EAAK,KAAIG,GAAO,iBAAcH,EAAK,GAAnB,MAChBA,EAAK,KAAIG,GAAO,iBAAcH,EAAK,GAAnB,MAEbG,I,+BAGC,IAAD,EACoBF,KAAKT,MAAxBQ,EADD,EACCA,KAAMI,EADP,EACOA,SACRC,EAAcJ,KAAKK,aAAaN,GAAQ,MAC9C,OAAO,yBAAKV,UAAWe,GAAcD,O,GAhBPG,aCEnBC,EAPJ,SAAChB,GACV,QAAIA,EAAMiB,MACDjB,EAAMY,UCIXM,EAAa,SAAC,GAAD,IACjBC,EADiB,EACjBA,MAAOC,EADU,EACVA,KAAMC,EADI,EACJA,OAAQC,EADJ,EACIA,QADJ,OAGjB,kBAAC,EAAD,CAAIL,MAAOI,GACT,4BAAQE,KAAK,SAASzB,UAAS,kBAAaqB,GAASG,QAASA,GAC5D,uBAAGxB,UAAS,gBAAWsB,QAY7BF,EAAWM,aAAe,CACxBF,QAAS,kBAAM,MACfD,QAAQ,GAGKH,Q,eCtBAO,E,OAJHC,EAAMC,OAAO,CACvBC,QAAS,6CCAEC,EAAoB,SAACC,GAAD,MAAY,CAC3CP,KAAM,sBACNQ,QAASD,EAAME,OAAOC,QAGXC,EAAS,WAAuB,IAAtBC,EAAqB,uDAAP,GAC7BD,EAASC,EAAW,+BAA2BA,EAA3B,KAA4C,GAChEC,EAAMX,EAAIY,IAAJ,gCAAiCH,IAC7C,MAAO,CACLX,KAAM,gBACNQ,QAASK,IAIAE,EAAQ,iBAAO,CAAC,CAAEf,KAAM,cAAgBW,MAExCK,EAAU,SAACJ,GAAD,OAAiB,SAACK,GACvCf,EAAIgB,KAAK,SAAU,CAAEN,gBAClBO,MAAK,kBAAMF,EAASF,QAAUI,MAAK,kBAAMF,EAASN,UAG1CS,EAAa,SAACC,GAAD,OAAU,SAACJ,EAAUK,GAAc,IACnDV,EAAgBU,IAAWD,KAA3BT,YACRV,EAAIqB,IAAJ,iBAAkBF,EAAKG,KAAvB,2BAAmCH,GAAnC,IAAyCI,MAAM,KAC5CN,MAAK,SAACO,GAAD,OAAYT,EAAS,CAAEjB,KAAM,sBAAuBQ,QAASkB,EAAOC,UACzER,MAAK,kBAAMF,EAASN,EAAOC,SAGnBgB,EAAgB,SAACP,GAAD,OAAU,SAACJ,EAAUK,GAAc,IACtDV,EAAgBU,IAAWD,KAA3BT,YACRV,EAAIqB,IAAJ,iBAAkBF,EAAKG,KAAvB,2BAAmCH,GAAnC,IAAyCI,MAAM,KAC5CN,MAAK,kBAAMF,EAASN,EAAOC,SAGnBiB,EAAa,SAACR,GAAD,OAAU,SAACJ,GACnCf,EAAI4B,OAAJ,iBAAqBT,EAAKG,MACvBL,MAAK,kBAAMF,EAASN,UCzBnBoB,E,kDACJ,WAAYtD,GAAQ,IAAD,8BACjB,cAAMA,IAKRuD,WAAa,SAACC,GAAO,IAAD,EAGd,EAAKxD,MADPkC,EAFgB,EAEhBA,OAAQK,EAFQ,EAERA,QAASJ,EAFD,EAECA,YAAaG,EAFd,EAEcA,MAElB,UAAVkB,EAAEC,IACJD,EAAEE,SAAWxB,EAAOC,GAAeI,EAAQJ,GACxB,WAAVqB,EAAEC,KACXnB,MAVFJ,EADmB,EAAKlC,MAAhBkC,UAFS,E,qDAiBT,IAAD,EAIHzB,KAAKT,MAFPmC,EAFK,EAELA,YAAgCwB,EAF3B,EAEQ9B,kBACbU,EAHK,EAGLA,QAASL,EAHJ,EAGIA,OAAQI,EAHZ,EAGYA,MAGnB,OACE,yBAAKsB,KAAK,OAAO9D,UAAU,6BACzB,kBAAC,EAAD,CAAMU,KAAK,WACT,2BACEV,UAAU,gBACVI,GAAG,cACH2D,QAASpD,KAAK8C,WACdO,YAAY,sBACZ7B,MAAOE,EACP4B,SAAUJ,KAId,kBAAC,EAAD,CAAMnD,KAAK,UACT,kBAAC,EAAD,CAAYW,MAAM,eAAeC,KAAK,OAAOE,QAAS,kBAAMiB,EAAQJ,MACpE,kBAAC,EAAD,CAAYhB,MAAM,OAAOC,KAAK,SAASE,QAAS,kBAAMY,EAAOC,MAC7D,kBAAC,EAAD,CAAYhB,MAAM,YAAYC,KAAK,QAAQE,QAAS,kBAAMgB,a,GAxC7CvB,aA4DRiD,eAJS,SAACC,GAAD,MAAY,CAAE9B,YAAa8B,EAAMrB,KAAKT,gBACnC,SAACK,GAAD,OAAc0B,YAAmB,CAC1DrC,oBAAmBK,SAAQK,UAASD,SACnCE,KACYwB,CAA6CV,GCrB7CU,G,MAAAA,aAHS,SAACC,GAAD,MAAY,CAAEE,SAAUF,EAAMrB,KAAKwB,KAAMC,gBAAiBJ,EAAMrB,KAAKT,gBAClE,SAACK,GAAD,OAAc0B,YAAmB,CAAEd,aAAYT,aAAYQ,iBAAiBX,KAExFwB,EA1CE,SAAC,GAEX,IADLG,EACI,EADJA,SAAUxB,EACN,EADMA,WAAYQ,EAClB,EADkBA,cAAeC,EACjC,EADiCA,WAAYiB,EAC7C,EAD6CA,gBAkBjD,OACE,2BAAOvE,UAAU,SACf,+BACE,4BACE,+CACA,wBAAIA,UAAU,eAAd,iBAGJ,gCAvBWqE,GAAY,IAEbG,KAAI,SAAC1B,GAAD,OAEd,wBAAIa,IAAKb,EAAKG,KACZ,wBAAIjD,UAAW8C,EAAKI,KAAO,aAAe,IAAKJ,EAAKT,aACpD,4BACE,kBAAC,EAAD,CAAYhB,MAAM,UAAUC,KAAK,QAAQC,OAAQuB,EAAKI,KAAM1B,QAAS,kBAAMqB,EAAWC,EAAMyB,MAC5F,kBAAC,EAAD,CAAYlD,MAAM,UAAUC,KAAK,OAAOC,QAASuB,EAAKI,KAAM1B,QAAS,kBAAM6B,EAAcP,EAAMyB,MAC/F,kBAAC,EAAD,CAAYlD,MAAM,SAASC,KAAK,UAAUE,QAAS,kBAAM8B,EAAWR,iBCR/DA,EARF,kBACX,6BACE,kBAAC,EAAD,CAAYxC,KAAK,UAAUC,MAAM,aACjC,kBAAC,EAAD,MACA,kBAAC,EAAD,QCDWkE,EARD,SAAAvE,GAAK,OACjB,6BACE,kBAAC,EAAD,CAAYI,KAAK,QAAQC,MAAM,WAE/B,6CCSWmE,IAVA,SAAAxE,GAAK,OAClB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOyE,KAAK,SAASC,UAAWC,IAChC,kBAAC,IAAD,CAAOF,KAAK,SAASC,UAAWH,IAChC,kBAAC,IAAD,CAAUK,KAAK,IAAIC,GAAG,e,qSCXtBC,EAAgB,CACpB3C,YAAa,GACbiC,KAAM,ICKOW,EAJKC,YAAgB,CAClCpC,KDEa,WAAoC,IAAnCqB,EAAkC,uDAA1Ba,EAAeG,EAAW,uCAChD,OAAQA,EAAO1D,MACb,IAAK,sBACH,OAAO,2BAAK0C,GAAZ,IAAmB9B,YAAa8C,EAAOlD,UACzC,IAAK,gBACH,OAAO,2BACFkC,GADL,IACYG,KAAMa,EAAOlD,QAAQmB,OAEnC,IAAK,aACL,IAAK,aACH,OAAO,2BAAKe,GAAZ,IAAmB9B,YAAa,KAClC,QACE,OAAO8B,MENOiB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,gBCCAC,EAAQC,YAAYC,EAAUC,YAAgBC,IAAOC,IAAOC,IAASC,MAC3EC,IAASC,OACP,kBAAC,IAAD,CAAUT,MAAOA,GACf,kBAACU,EAAA,EAAD,OACWC,SAASC,eAAe,SD4GjC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5D,MAAK,SAAA6D,GACjCA,EAAaC,kB","file":"static/js/main.8119267f.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { hot } from 'react-hot-loader';\n\nimport Menu from './components/menu/menu';\nimport Routes from './main/routes';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Menu />\n      <Routes />\n    </div>\n  );\n}\n\nexport default hot(module)(App);\n","import React from 'react';\n\n// import { Container } from './styles';\n\nconst Menu = (props) => (\n  <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary rounded\">\n    <div className=\"container\">\n      <a className=\"navbar-brand\" href=\"/todos\">\n        <i className=\"fa fa-calendar-check-o mr-2\" />\nTodoApp\n      </a>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"/todos\">\n              Tarefas\n            </a>\n          </li>\n          <li className=\"nav-item\">\n            <a className=\"nav-link\" href=\"/about\">\n              Sobre\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n);\n\nexport default Menu;\n","import React from 'react';\nimport './PageHeader.css';\n// import { Container } from './styles';\n\nconst PageHeader = (props) => (\n  <header className=\"pb-2 mt-4 mb-2 border-bottom\">\n    <h1>\n      {props.name} \n{' '}\n<small className=\"texto\">{props.small}</small>\n    </h1>\n  </header>\n);\n\nexport default PageHeader;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n// import { Container } from './styles';\n\nexport default class Grid extends Component {\n  toCssClasses(numbers) {\n    const cols = this.numbers ? numbers.split(' ') : [];\n    let classes = '';\n\n    if (cols[0]) classes += `col-xs-${cols[0]} `;\n    if (cols[1]) classes += `col-sm-${cols[1]} `;\n    if (cols[2]) classes += `col-md-${cols[2]} `;\n    if (cols[3]) classes += `col-lg-${cols[3]} `;\n\n    return classes;\n  }\n\n  render() {\n    const { cols, children } = this.props;\n    const gridClasses = this.toCssClasses(cols || '12');\n    return <div className={gridClasses}>{children}</div>;\n  }\n}\n\nGrid.propTypes = {\n  cols: PropTypes.string.isRequired,\n  children: PropTypes.any.isRequired,\n};\n","const If = (props) => {\n  if (props.test) {\n    return props.children;\n  }\n  return false;\n};\n\nexport default If;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport If from '../If/If';\n\n// import { Container } from './styles';\n\nconst IconButton = ({\n  style, icon, hidden, onClick,\n}) => (\n  <If test={!hidden}>\n    <button type=\"button\" className={`btn btn-${style}`} onClick={onClick}>\n      <i className={`fa fa-${icon}`} />\n    </button>\n  </If>\n);\n\nIconButton.propTypes = {\n  hidden: PropTypes.bool,\n  style: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired,\n  onClick: PropTypes.func,\n};\n\nIconButton.defaultProps = {\n  onClick: () => null,\n  hidden: false,\n};\n\nexport default IconButton;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://todoapp-caique.herokuapp.com/api\",\n});\n\nexport default api;\n","import api from '../../../services/api';\n\n\nexport const changeDescription = (event) => ({\n  type: 'DESCRIPTION_CHANGED',\n  payload: event.target.value,\n});\n\nexport const search = (description = '') => {\n  const search = description ? `&description__regex=/${description}/` : '';\n  const req = api.get(`/todos?sort=-createdAt${search}`);\n  return {\n    type: 'TODO_SEARCHED',\n    payload: req,\n  };\n};\n\nexport const clear = () => ([{ type: 'TODO_CLEAR' }, search()]);\n\nexport const addTodo = (description) => (dispatch) => {\n  api.post('/todos', { description })\n    .then(() => dispatch(clear())).then(() => dispatch(search()));\n};\n\nexport const markAsDone = (todo) => (dispatch, getState) => {\n  const { description } = getState().todo;\n  api.put(`/todos/${todo._id}`, { ...todo, done: true })\n    .then((result) => dispatch({ type: 'TODO_MARKED_AS_DONE', payload: result.data }))\n    .then(() => dispatch(search(description)));\n};\n\nexport const markAsPending = (todo) => (dispatch, getState) => {\n  const { description } = getState().todo;\n  api.put(`/todos/${todo._id}`, { ...todo, done: false })\n    .then(() => dispatch(search(description)));\n};\n\nexport const removeTodo = (todo) => (dispatch) => {\n  api.delete(`/todos/${todo._id}`)\n    .then(() => dispatch(search()));\n};\n\n\n// export default changeDescription;\n","/* eslint-disable no-unused-expressions */\n/* eslint-disable react/style-prop-object */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\n\nimport Grid from '../Grid/Grid';\nimport IconButton from '../IconButton/IconButton';\nimport {\n  changeDescription, search, addTodo, clear,\n} from './actions/todoActions';\n\n\nclass TodoForm extends Component {\n  constructor(props) {\n    super(props);\n    const { search } = this.props;\n    search();\n  }\n\n  keyHandler = (e) => {\n    const {\n      search, addTodo, description, clear,\n    } = this.props;\n    if (e.key === 'Enter') {\n      e.shiftKey ? search(description) : addTodo(description);\n    } else if (e.key === 'Escape') {\n      clear();\n    }\n  };\n\n  render() {\n    const {\n      description, changeDescription: trocarDescricao,\n      addTodo, search, clear,\n    } = this.props;\n\n    return (\n      <div role=\"form\" className=\"todoForm input-group my-4\">\n        <Grid cols=\"12 9 10\">\n          <input\n            className=\"form-control \"\n            id=\"description\"\n            onKeyUp={this.keyHandler}\n            placeholder=\"Adicione uma tarefa\"\n            value={description}\n            onChange={trocarDescricao}\n          />\n        </Grid>\n\n        <Grid cols=\"12 3 2\">\n          <IconButton style=\"primary ml-2\" icon=\"plus\" onClick={() => addTodo(description)} />\n          <IconButton style=\"info\" icon=\"search\" onClick={() => search(description)} />\n          <IconButton style=\"secondary\" icon=\"close\" onClick={() => clear()} />\n        </Grid>\n      </div>\n    );\n  }\n}\n\nTodoForm.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n  // handleChange: PropTypes.func.isRequired,\n  changeDescription: PropTypes.func.isRequired,\n  search: PropTypes.func.isRequired,\n  clear: PropTypes.func.isRequired,\n  description: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({ description: state.todo.description });\nconst mapDispatchToProps = (dispatch) => bindActionCreators({\n  changeDescription, search, addTodo, clear,\n}, dispatch);\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoForm);\n","/* eslint-disable react/style-prop-object */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport IconButton from '../IconButton/IconButton';\nimport { markAsDone, markAsPending, removeTodo } from './actions/todoActions';\nimport './Todo.css';\n\nconst TodoList = ({\n  proplist, markAsDone, markAsPending, removeTodo, formDescription,\n}) => {\n  const renderRows = () => {\n    const list = proplist || [];\n\n    return list.map((todo) => (\n      // eslint-disable-next-line no-underscore-dangle\n      <tr key={todo._id}>\n        <td className={todo.done ? 'markAsDone' : ''}>{todo.description}</td>\n        <td>\n          <IconButton style=\"success\" icon=\"check\" hidden={todo.done} onClick={() => markAsDone(todo, formDescription)} />\n          <IconButton style=\"warning\" icon=\"undo\" hidden={!todo.done} onClick={() => markAsPending(todo, formDescription)} />\n          <IconButton style=\"danger\" icon=\"trash-o\" onClick={() => removeTodo(todo)} />\n        </td>\n      </tr>\n    ));\n  };\n\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th>Descrição</th>\n          <th className=\"todoActions\">Ações</th>\n        </tr>\n      </thead>\n      <tbody>{renderRows()}</tbody>\n    </table>\n  );\n};\n\nTodoList.propTypes = {\n  removeTodo: PropTypes.func.isRequired,\n  markAsPending: PropTypes.func.isRequired,\n  markAsDone: PropTypes.func.isRequired,\n  proplist: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nconst mapStateToProps = (state) => ({ proplist: state.todo.list, formDescription: state.todo.description });\nconst mapDispatchToProps = (dispatch) => bindActionCreators({ removeTodo, markAsDone, markAsPending }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);\n","/* eslint-disable react/no-access-state-in-setstate */\n/* eslint-disable no-underscore-dangle */\nimport React from 'react';\n\nimport PageHeader from '../PageHeader/PageHeader';\nimport TodoForm from './TodoForm';\nimport TodoList from './TodoList';\n\nconst todo = () => (\n  <div>\n    <PageHeader name=\"Tarefas\" small=\"Cadastro\" />\n    <TodoForm />\n    <TodoList />\n  </div>\n);\n\nexport default todo;\n","import React from \"react\";\nimport PageHeader from \"../PageHeader/PageHeader\";\n\nconst About = props => (\n  <div>\n    <PageHeader name=\"Sobre\" small=\"Nós\" />\n\n    <h3>Somos assim</h3>\n  </div>\n);\n\nexport default About;\n","import React from \"react\";\nimport { Route, BrowserRouter, Switch, Redirect } from \"react-router-dom\";\n\nimport Todo from \"../components/todo/todo\";\nimport About from \"../components/about/about\";\n\nconst Routes = props => (\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/todos\" component={Todo} />\n      <Route path=\"/about\" component={About} />\n      <Redirect from=\"*\" to=\"/todos\" />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Routes;\n","const INITIAL_STATE = {\n  description: '',\n  list: [],\n};\n\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case 'DESCRIPTION_CHANGED':\n      return { ...state, description: action.payload };\n    case 'TODO_SEARCHED':\n      return {\n        ...state, list: action.payload.data,\n      };\n    case 'TODO_ADDED':\n    case 'TODO_CLEAR':\n      return { ...state, description: '' };\n    default:\n      return state;\n  }\n};\n\n\n// export default function todos() {\n//   return ({\n//     description: 'Lista',\n//     list: [{\n//       _id: 1,\n//       description: 'Pagar fartura do cartão',\n//       done: true,\n//     }, {\n//       _id: 2,\n//       description: 'Reuniao com os chefao',\n//       done: false,\n//     }, {\n//       _id: 3,\n//       description: 'Consulta medicas na terça depois do almoço',\n//       done: false,\n//     }],\n//   });\n// }\n","import { combineReducers } from 'redux';\nimport todo from './todo.redux';\n\nconst rootReducer = combineReducers({\n  todo,\n});\n\nexport default rootReducer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport './index.css';\n\n\nimport logger from 'redux-logger';\nimport promise from 'redux-promise';\nimport multi from 'redux-multi';\nimport thunk from 'redux-thunk';\nimport App from './App';\nimport reducers from './main/reducers/index.redux';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nconst store = createStore(reducers, applyMiddleware(thunk, multi, promise, logger));\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}